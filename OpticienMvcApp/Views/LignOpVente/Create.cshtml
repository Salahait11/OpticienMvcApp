@model OpticienMvcApp.LignOpVente

@{
    ViewBag.Title = "Créer une nouvelle ligne de vente";
}

<div class="container-fluid px-4 py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold" style="color: var(--primary-color);">
            <i class="fa fa-plus-circle me-2" style="color: var(--accent-color);"></i>
            @ViewBag.Title
        </h2>
        @if (ViewBag.ParentOperationVenteId != null)
        {
            @Html.ActionLink("Retour à l'Opération", "Details", "OperationVente", 
                new { id = ViewBag.ParentOperationVenteId }, 
                new { @class = "btn shadow-sm", 
                      style = "border-color: var(--accent-color); color: var(--accent-color);" })
        }
        else
        {
            @Html.ActionLink("Retour à la liste", "Index", null, 
                new { @class = "btn shadow-sm", 
                      style = "border-color: var(--accent-color); color: var(--accent-color);" })
        }
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="card shadow-sm border-0">
            <div class="card-header bg-white py-3">
                <h5 class="mb-0 fw-bold">
                    <i class="fa fa-info-circle me-2" style="color: var(--accent-color);"></i>
                    Détails de la Ligne de Vente
                </h5>
            </div>
            <div class="card-body p-4">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                @if (ViewBag.ParentOperationVenteId != null)
                {
                    <input type="hidden" name="ParentOperationVenteId" value="@ViewBag.ParentOperationVenteId" />
                }

                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OperationVenteID, "Opération de Vente", htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-shopping-cart"></i></span>
                                @Html.DropDownListFor(model => model.OperationVenteID, 
                                    ViewBag.OperationVenteID as SelectList, 
                                    "-- Sélectionner Opération --", 
                                    new { @class = "form-select" })
                            </div>
                            @Html.ValidationMessageFor(model => model.OperationVenteID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ProduitID, "Produit", htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-box"></i></span>
                                @Html.DropDownListFor(model => model.ProduitID, 
                                    ViewBag.ProduitID as SelectList, 
                                    "-- Sélectionner Produit --", 
                                    new { @class = "form-select" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ProduitID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantite, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-hashtag"></i></span>
                                @Html.EditorFor(model => model.Quantite, 
                                    new { htmlAttributes = new { @class = "form-control", type = "number", min = "1" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Quantite, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PrixUnitaireVendu, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-euro-sign"></i></span>
                                @Html.EditorFor(model => model.PrixUnitaireVendu, 
                                    new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PrixUnitaireVendu, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remise, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-percent"></i></span>
                                @Html.EditorFor(model => model.Remise, 
                                    new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Remise, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Ligne_OD_SPH, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-eye"></i></span>
                                @Html.EditorFor(model => model.Ligne_OD_SPH, 
                                    new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Ligne_OD_SPH, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Ligne_OG_SPH, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-eye"></i></span>
                                @Html.EditorFor(model => model.Ligne_OG_SPH, 
                                    new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Ligne_OG_SPH, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group mt-4">
                    <div class="d-flex justify-content-end">
                        <button type="submit" class="btn shadow-sm" 
                                style="background-color: var(--accent-color); border-color: var(--accent-color); color: white;">
                            <i class="fa fa-save me-2"></i>Créer
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            // Animation d'entrée pour la carte
            $('.card').hide().fadeIn(500);
        });
    </script>
}