@model OpticienMvcApp.OperationVente

@{
    ViewBag.Title = "Modifier une opération de vente";
}

<div class="container-fluid px-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold" style="color: var(--primary-color);">
            <i class="fa fa-edit me-2" style="color: var(--accent-color);"></i>
            @ViewBag.Title
        </h2>
        @Html.ActionLink("Retour à la liste", "Index", null, 
            new { @class = "btn shadow-sm", 
                  style = "border-color: var(--accent-color); color: var(--accent-color);" })
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID)

        <div class="card shadow-sm border-0 mb-4">
            <div class="card-body p-4">
                @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.NumeroOp, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-hashtag"></i></span>
                                @Html.TextBoxFor(model => model.NumeroOp, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.NumeroOp, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Statut, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-tag"></i></span>
                                @Html.DropDownListFor(model => model.Statut, 
                                    new List<SelectListItem> {
                                        new SelectListItem { Text = "En cours", Value = "En cours" },
                                        new SelectListItem { Text = "Commandé", Value = "Commandé" },
                                        new SelectListItem { Text = "Prêt", Value = "Prêt" },
                                        new SelectListItem { Text = "Livré", Value = "Livré" },
                                        new SelectListItem { Text = "Payé", Value = "Payé" },
                                        new SelectListItem { Text = "Annulé", Value = "Annulé" }
                                    }, 
                                    "Sélectionnez un statut", 
                                    new { @class = "form-select" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Statut, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateDeVente, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-calendar"></i></span>
                                @Html.TextBoxFor(model => model.DateDeVente, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            </div>
                            @Html.ValidationMessageFor(model => model.DateDeVente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DateLivrisonPrevu, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-calendar-check"></i></span>
                                @Html.TextBoxFor(model => model.DateLivrisonPrevu, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                            </div>
                            @Html.ValidationMessageFor(model => model.DateLivrisonPrevu, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ClientID, "Client", htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-user"></i></span>
                                @Html.DropDownList("ClientID", null, "Sélectionner un client", new { @class = "form-select" })
                            </div>
                            @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OrdID, "Ordonnance", htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-file-medical"></i></span>
                                @Html.DropDownList("OrdID", null, "Sélectionner une ordonnance", new { @class = "form-select" })
                            </div>
                            @Html.ValidationMessageFor(model => model.OrdID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.VendeurID, "Vendeur", htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-user-tie"></i></span>
                                @Html.DropDownList("VendeurID", null, "Sélectionner un vendeur", new { @class = "form-select" })
                                <button type="button" class="btn" style="background-color: var(--accent-color); color: white;" 
                                        data-bs-toggle="modal" data-bs-target="#addVendeurModal">
                                    <i class="fa fa-plus"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(model => model.VendeurID, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-12">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Remarque, htmlAttributes: new { @class = "form-label fw-bold" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fa fa-comment"></i></span>
                                @Html.TextAreaFor(model => model.Remarque, new { @class = "form-control", rows = 3 })
                            </div>
                            @Html.ValidationMessageFor(model => model.Remarque, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Section des lignes de vente -->
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-header bg-white">
                <h4 class="mb-0">
                    <i class="fa fa-shopping-cart me-2" style="color: var(--accent-color);"></i>
                    Produits de la vente
                </h4>
            </div>
            <div class="card-body p-4">
                <div id="lignesVente">
                    @if (Model.LignOpVente != null && Model.LignOpVente.Any())
                    {
                        foreach (var ligne in Model.LignOpVente)
                        {
                            <div class="ligne-vente card mb-3">
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-md-4">
                                            <div class="form-group">
                                                <label class="form-label fw-bold">Produit</label>
                                                <select class="form-select produit-select" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].ProduitID">
                                                    <option value="">-- Sélectionner un produit --</option>
                                                    @if (ViewBag.Produits != null)
                                                    {
                                                        foreach (var produit in ViewBag.Produits as SelectList)
                                                        {
                                                            <option value="@produit.Value" @(produit.Value == ligne.ProduitID.ToString() ? "selected" : "")>
                                                                @produit.Text
                                                            </option>
                                                        }
                                                    }
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="form-label fw-bold">Quantité</label>
                                                <input type="number" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Quantite" 
                                                       min="1" value="@ligne.Quantite">
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="form-label fw-bold">Prix unitaire</label>
                                                <input type="number" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].PrixUnitaireVendu" 
                                                       step="0.01" value="@ligne.PrixUnitaireVendu.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)">
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="form-label fw-bold">Remise (%)</label>
                                                <input type="number" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Remise" 
                                                       step="0.01" value="@ligne.Remise.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture)">
                                            </div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="form-group">
                                                <label class="form-label fw-bold">&nbsp;</label>
                                                <button type="button" class="btn btn-danger w-100 supprimer-ligne">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Caractéristiques optiques -->
                                    <div class="row g-3 mt-2 caracteristiques-optiques" style="display: @(ligne.ProduitID > 0 ? "block" : "none");">
                                        <div class="col-md-6">
                                            <h6 class="fw-bold">Œil Droit (OD)</h6>
                                            <div class="row g-2">
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OD_SPH" 
                                                           placeholder="SPH" value="@ligne.Ligne_OD_SPH">
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OD_CYL" 
                                                           placeholder="CYL" value="@ligne.Ligne_OD_CYL">
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OD_AXE" 
                                                           placeholder="AXE" value="@ligne.Ligne_OD_AXE">
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OD_ADD" 
                                                           placeholder="ADD" value="@ligne.Ligne_OD_ADD">
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <h6 class="fw-bold">Œil Gauche (OG)</h6>
                                            <div class="row g-2">
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OG_SPH" 
                                                           placeholder="SPH" value="@ligne.Ligne_OG_SPH">
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OG_CYL" 
                                                           placeholder="CYL" value="@ligne.Ligne_OG_CYL">
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OG_AXE" 
                                                           placeholder="AXE" value="@ligne.Ligne_OG_AXE">
                                                </div>
                                                <div class="col-6">
                                                    <input type="text" class="form-control" name="LignesVente[@Model.LignOpVente.ToList().IndexOf(ligne)].Ligne_OG_ADD" 
                                                           placeholder="ADD" value="@ligne.Ligne_OG_ADD">
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

                <button type="button" class="btn btn-outline-primary mt-3" id="ajouterLigne">
                    <i class="fa fa-plus me-2"></i>Ajouter un produit
                </button>
            </div>
        </div>

        <div class="d-flex justify-content-end gap-2">
            <input type="submit" value="Enregistrer" class="btn shadow-sm" 
                   style="background-color: var(--accent-color); border-color: var(--accent-color); color: white;" />
            @Html.ActionLink("Annuler", "Index", null, 
                new { @class = "btn shadow-sm", 
                      style = "border-color: var(--accent-color); color: var(--accent-color);" })
        </div>
    }
</div>

<!-- Modal pour ajouter un vendeur -->
<div class="modal fade" id="addVendeurModal" tabindex="-1" aria-labelledby="addVendeurModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header" style="background-color: var(--accent-color); color: white;">
                <h5 class="modal-title" id="addVendeurModalLabel">
                    <i class="fa fa-user-plus me-2"></i>Nouveau Vendeur
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="createVendeurFormContainer">
                    <p>Chargement...</p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Template pour une nouvelle ligne de vente -->
<template id="ligneVenteTemplate">
    <div class="ligne-vente card mb-3">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label fw-bold">Produit</label>
                        <select class="form-select produit-select" name="LignesVente[INDEX].ProduitID">
                            <option value="">-- Sélectionner un produit --</option>
                            @if (ViewBag.Produits != null)
                            {
                                foreach (var produit in ViewBag.Produits as SelectList)
                                {
                                    <option value="@produit.Value">@produit.Text</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label fw-bold">Quantité</label>
                        <input type="number" class="form-control" name="LignesVente[INDEX].Quantite" min="1" value="1">
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label fw-bold">Prix unitaire</label>
                        <input type="number" class="form-control" name="LignesVente[INDEX].PrixUnitaireVendu" 
                               step="0.01" value="0.00">
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label fw-bold">Remise (%)</label>
                        <input type="number" class="form-control" name="LignesVente[INDEX].Remise" 
                               step="0.01" value="0.00">
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label fw-bold">&nbsp;</label>
                        <button type="button" class="btn btn-danger w-100 supprimer-ligne">
                            <i class="fa fa-trash"></i>
                        </button>
                    </div>
                </div>
            </div>

            <!-- Caractéristiques optiques -->
            <div class="row g-3 mt-2 caracteristiques-optiques" style="display: none;">
                <div class="col-md-6">
                    <h6 class="fw-bold">Œil Droit (OD)</h6>
                    <div class="row g-2">
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OD_SPH" placeholder="SPH">
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OD_CYL" placeholder="CYL">
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OD_AXE" placeholder="AXE">
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OD_ADD" placeholder="ADD">
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <h6 class="fw-bold">Œil Gauche (OG)</h6>
                    <div class="row g-2">
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OG_SPH" placeholder="SPH">
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OG_CYL" placeholder="CYL">
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OG_AXE" placeholder="AXE">
                        </div>
                        <div class="col-6">
                            <input type="text" class="form-control" name="LignesVente[INDEX].Ligne_OG_ADD" placeholder="ADD">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</template>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            let ligneIndex = @(Model.LignOpVente?.Count ?? 0);

            // Fonction pour ajouter une nouvelle ligne de vente
            $('#ajouterLigne').click(function() {
                const template = document.getElementById('ligneVenteTemplate').innerHTML;
                const newLigne = template.replace(/INDEX/g, ligneIndex);
                $('#lignesVente').append(newLigne);
                ligneIndex++;
            });

            // Gérer la suppression d'une ligne
            $(document).on('click', '.supprimer-ligne', function() {
                $(this).closest('.ligne-vente').remove();
            });

            // Gérer le changement de produit
            $(document).on('change', '.produit-select', function() {
                const produitId = $(this).val();
                const caracteristiquesOptiques = $(this).closest('.ligne-vente').find('.caracteristiques-optiques');
                
                if (produitId) {
                    caracteristiquesOptiques.show();
                } else {
                    caracteristiquesOptiques.hide();
                }
            });

            // Animation d'entrée pour la carte
            $('.card').css({
                'opacity': '0',
                'transform': 'translateY(20px)'
            }).animate({
                'opacity': '1',
                'transform': 'translateY(0)'
            }, 500);

            // Chargement du formulaire de création de vendeur
            $('#addVendeurModal').on('show.bs.modal', function() {
                $.get('@Url.Action("CreatePartial", "Vendeur")', function(data) {
                    $('#createVendeurFormContainer').html(data);
                });
            });

            // Soumission du formulaire de création de vendeur
            $(document).on('submit', '#createVendeurForm', function(e) {
                e.preventDefault();
                var form = $(this);
                
                if (form.valid()) {
                    $.ajax({
                        url: form.attr('action'),
                        type: 'POST',
                        data: form.serialize(),
                        success: function(response) {
                            if (response.success) {
                                var newOption = new Option(response.vendeurName, response.vendeurId, true, true);
                                $('#VendeurID').append(newOption).trigger('change');
                                $('#addVendeurModal').modal('hide');
                                toastr.success('Vendeur créé avec succès');
                            } else {
                                $('#createVendeurFormContainer').html(response.html);
                                toastr.error('Erreur lors de la création du vendeur');
                            }
                        },
                        error: function() {
                            toastr.error('Une erreur est survenue lors de l\'enregistrement du vendeur');
                        }
                    });
                }
            });

            // Réinitialisation du formulaire à la fermeture de la modal
            $('#addVendeurModal').on('hidden.bs.modal', function() {
                $('#createVendeurFormContainer').html('<p>Chargement...</p>');
            });
        });
    </script>
}

<style>
    .form-control, .form-select {
        border-radius: 8px;
        border: 1px solid #dee2e6;
        padding: 0.5rem 1rem;
        transition: all 0.3s ease;
    }

    .form-control:focus, .form-select:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 0.2rem rgba(52, 152, 219, 0.25);
    }

    .input-group-text {
        background-color: var(--accent-color);
        border-color: var(--accent-color);
        color: white;
    }

    .btn {
        transition: all 0.3s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .modal-content {
        border-radius: 12px;
        border: none;
    }

    .modal-header {
        border-bottom: 1px solid #dee2e6;
        padding: 1rem;
    }

    .modal-body {
        padding: 1.5rem;
    }

    .modal-footer {
        border-top: 1px solid #dee2e6;
        padding: 1rem;
    }

    .ligne-vente {
        transition: all 0.3s ease;
    }

    .ligne-vente:hover {
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }

    .caracteristiques-optiques {
        background-color: #f8f9fa;
        border-radius: 0.5rem;
        padding: 1rem;
        margin-top: 1rem;
    }
</style>